# -*- coding: utf-8 -*-
"""Blog Generator using OpenAI API.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q4BTGENQ2CETpWn61F6raaC0yY9UfcB3

#**1. Blog Generator with OpenAI API**

*   Build a Blog Generator using the powerful OpenAI API.
*   Goal is to create a intelligent system capable of generating engaging and coherant blog content with just a prompt from the user.

##**Features**


1. **Take User Input**: Accept prompts or topics defined by the user to generate content.
2. **Generate Blog Posts**: Create full blog posts with titles, headers, and paragraphs, ready for publishing.
3. **Display Results**: Show the generated blog posts in a clean and organized format.

##**2. Libraries Import**
"""

!pip install openai

"""**2. Import Python Libraries**"""

import os
import openai

from openai import OpenAI

"""##**3. Sending a first request to OpenAI API**

### **3.1 Setting up API Key**
"""

os.environ["OPENAI_API_KEY"] = "Your_api_key"
client = OpenAI()

"""### **3.2 OpenAI available models**"""

# list out the available models
print(client.models.list())

client.completions.create(
    model="gpt-3.5-turbo-instruct",
    prompt="Tell me the benefits",
)

"""### **4. Building Blog Generator**"""

response = client.completions.create(
    model="gpt-3.5-turbo-instruct",
    prompt="Benefits of chatGPT",
    temperatue=0, #for generating content=cna be 1, now its
    max_tokens=700,
)

print(response)

print(response.choices[0].text)

prompt="""
You are a copy writer with years of experience writing impactful blog that converge and help elevate brands.Your task is to write a blog on any topic system provides you with. Make sure to write in a format that works for Medium. Each blog should be separated into segments that have titles and subtitles. EAch paragraph should be threee sentences long.

Topic: GTA 6
Additional pointers: None
"""

response = client.completions.create(
    model="gpt-3.5-turbo-instruct",
    prompt=prompt,
    temperatue=1, #for generating content=cna be 1, now its
    max_tokens=1000,
)

print(response.choices[0].text)

"""### **4.2 Accepting user inputs**"""

topic = input("Enter a topic:")
additional_pointers = input("Enter anya dditional pointers, if any: ")

prompt = f"""
You are a copy writer with years of experience writing impactful blog that converge and help elevate brands.You are a copy writer with years of experience writing impactful blog that converge and help elevate brands.Your task is to write a blog on any topic system provides you with. Make sure to write in a format that works for Medium. Each blog should be separated into segments that have titles and subtitles. EAch paragraph should be threee sentences long.

Topic: {topic}
Additional pointers: {additional_pointers}
"""

response = client.completions.create(
    model="gpt-3.5-turbo-instruct",
    prompt=prompt,
    temperatue=1, #for generating content=cna be 1, now its
    max_tokens=1000,
)

print(response.choices[0].text)

"""**Experiement: 2**"""

import os
import openai
import time

# Set your OpenAI API key
os.environ["OPENAI_API_KEY"] = "Your_API_Key"

# Initialize the OpenAI client
client = openai.OpenAI()

# Function to call the API with rate limiting
def call_api_with_rate_limit(prompt):
    try:
        response = client.completions.create(
            model="gpt-3.5-turbo-instruct",
            prompt=prompt,
        )
        return response
    except openai.RateLimitError:
        print("Rate limit exceeded. Waiting for 10 seconds...")
        time.sleep(10)  # Adjust the sleep duration as needed
        return call_api_with_rate_limit(prompt)  # Retry the call

# Call the function with your prompt
prompt = "Tell me the benefits"
response = call_api_with_rate_limit(prompt)

# Print the response
print(response)